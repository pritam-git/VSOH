<?php

/**
 * Default_Model_Translator
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    L8M
 * @subpackage Models (Default Module)
 * @author     Norbert Marks <nm@l8m.com>
 * @version    SVN: $Id: Translator.php 7 2014-03-11 16:18:40Z nm $
 */
class Default_Model_Translator extends Default_Model_Base_Translator
{
	/**
	 *
	 *
	 * Class Methods
	 *
	 *
	 */

	/**
	 * applies the changes made to this object into database
	 * this method is smart enough to know if any changes are made
	 * and whether to use INSERT or UPDATE statement
	 *
	 * this method also saves the related components
	 *
	 * @param Doctrine_Connection $conn	 optional connection parameter
	 * @throws Exception					if record is not valid and validation is active
	 * @return void
	 */
	public function save(Doctrine_Connection $conn = null)
	{
		$this->_removeFromCache();

		if ($this->id &&
			$this->hasRelation('Translation')) {

			$this->_removeTranslationFromCache();
		}
		$this->_removeFieldNameFromCache();

		parent::save($conn);
	}


	/**
	 * deletes this data access object and all the related composites
	 * this operation is isolated by a transaction
	 *
	 * this event can be listened by the onPreDelete and onDelete listeners
	 *
	 * @return boolean	  true if successful
	 */
	public function delete(Doctrine_Connection $conn = null)
	{
		$this->_removeFromCache();

		if ($this->id &&
			$this->hasRelation('Translation')) {

			$this->_removeTranslationFromCache();
		}

		return parent::delete($conn);
	}

	/**
	 * remove from cache
	 */
	protected function _removeFromCache()
	{
		if ($this->id) {

			/**
			 * helper 'cause doctrine query reffers to its-self by reference and overwrites changes
			 */
			$helperArray = $this->toArray();
			unset($helperArray['id']);
			unset($helperArray['create_at']);
			unset($helperArray['updated_at']);
			unset($helperArray['deleted_at']);

			$transaltionModel = Doctrine_Query::create()
				->from('Default_Model_Translator t')
				->addWhere('t.id = ? ', array($this->id))
				->limit(1)
				->execute()
				->getFirst()
			;
			if ($transaltionModel) {
				if (Zend_Registry::isRegistered('Zend_Cache_Manager') &&
					(NULL != $cacheManager = Zend_Registry::get('Zend_Cache_Manager')) &&
					($cacheManager instanceof Zend_Cache_Manager) &&
					$cacheManager->hasCacheTemplate('L8M_Translate_Adapter_Doctrine')) {

					$cache = $cacheManager->getCache('L8M_Translate_Adapter_Doctrine');

					$cacheValue = $cache->remove(L8M_Translate_Adapter_Doctrine::getCacheName($transaltionModel->short));
				}

				/**
				 * merge with helper
				 */
				$this->merge($helperArray);
			}
		}
	}
}