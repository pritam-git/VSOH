<?php

/**
 * Default_Model_Base_NewsletterSubscriber
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $email
 * @property string $firstname
 * @property string $lastname
 * @property string $lang
 * @property integer $salutation_id
 * @property integer $newsletter_subscriber_type_id
 * @property Default_Model_Salutation $Salutation
 * @property Default_Model_NewsletterSubscriberType $NewsletterSubscriberType
 * 
 * @package    L8M
 * @subpackage Models (Default Module)
 * @author     Norbert Marks <nm@l8m.com>
 * @version    SVN: $Id: Builder.php 7 2014-03-11 16:18:40Z nm $
 */
abstract class Default_Model_Base_NewsletterSubscriber extends Default_Model_Base_Abstract
{
    public function setTableDefinition()
    {
        $this->setTableName('newsletter_subscriber');
        $this->hasColumn('id', 'integer', 11, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => '11',
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('firstname', 'string', 120, array(
             'type' => 'string',
             'length' => '120',
             ));
        $this->hasColumn('lastname', 'string', 120, array(
             'type' => 'string',
             'length' => '120',
             ));
        $this->hasColumn('lang', 'string', 2, array(
             'type' => 'string',
             'length' => '2',
             ));
        $this->hasColumn('salutation_id', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '11',
             ));
        $this->hasColumn('newsletter_subscriber_type_id', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '11',
             ));


        $this->index('newsletter_subscriber_type_id_idx', array(
             'fields' => 
             array(
              0 => 'newsletter_subscriber_type_id',
             ),
             ));
        $this->index('salutation_id_idx', array(
             'fields' => 
             array(
              0 => 'salutation_id',
             ),
             ));
        $this->option('collate', 'utf8_bin');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Default_Model_Salutation as Salutation', array(
             'local' => 'salutation_id',
             'foreign' => 'id'));

        $this->hasOne('Default_Model_NewsletterSubscriberType as NewsletterSubscriberType', array(
             'local' => 'newsletter_subscriber_type_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}