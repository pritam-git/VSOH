<?php

/**
 * Default_Model_Base_Navigation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $navigation_id
 * @property string $short
 * @property string $name
 * @property string $title
 * @property string $action_resource
 * @property string $role_short
 * @property string $dynamic
 * @property boolean $visible
 * @property boolean $show_all
 * @property boolean $show_all_loggedin
 * @property string $target
 * @property string $uri
 * @property string $css_class
 * @property string $default_language
 * @property boolean $do_not_translate
 * @property integer $position
 * @property Default_Model_Navigation $Navigation
 * @property Default_Model_Action $ActionResource
 * @property Default_Model_Role $RoleShort
 * 
 * @package    L8M
 * @subpackage Models (Default Module)
 * @author     Norbert Marks <nm@l8m.com>
 * @version    SVN: $Id: Builder.php 7 2014-03-11 16:18:40Z nm $
 */
abstract class Default_Model_Base_Navigation extends Default_Model_Base_Abstract
{
    public function setTableDefinition()
    {
        $this->setTableName('navigation');
        $this->hasColumn('id', 'integer', 11, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => '11',
             ));
        $this->hasColumn('navigation_id', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '11',
             ));
        $this->hasColumn('short', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('action_resource', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('role_short', 'string', 16, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '16',
             ));
        $this->hasColumn('dynamic', 'string', 120, array(
             'type' => 'string',
             'length' => '120',
             ));
        $this->hasColumn('visible', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('show_all', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('show_all_loggedin', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('target', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('uri', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('css_class', 'string', 120, array(
             'type' => 'string',
             'length' => '120',
             ));
        $this->hasColumn('default_language', 'string', 2, array(
             'type' => 'string',
             'length' => '2',
             ));
        $this->hasColumn('do_not_translate', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('position', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '11',
             ));


        $this->index('navigation_id_idx', array(
             'fields' => 
             array(
              0 => 'navigation_id',
             ),
             ));
        $this->index('role_short_idx', array(
             'fields' => 
             array(
              0 => 'role_short',
             ),
             ));
        $this->index('position_idx', array(
             'fields' => 
             array(
              0 => 'position',
             ),
             ));
        $this->index('action_resource_idx', array(
             'fields' => 
             array(
              0 => 'action_resource',
             ),
             ));
        $this->option('collate', 'utf8_bin');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Default_Model_Navigation as Navigation', array(
             'local' => 'navigation_id',
             'foreign' => 'id'));

        $this->hasOne('Default_Model_Action as ActionResource', array(
             'local' => 'action_resource',
             'foreign' => 'resource'));

        $this->hasOne('Default_Model_Role as RoleShort', array(
             'local' => 'role_short',
             'foreign' => 'short'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}