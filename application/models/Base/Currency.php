<?php

/**
 * Default_Model_Base_Currency
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $iso_3
 * @property integer $iso_nr
 * @property string $symbol_left
 * @property string $symbol_right
 * @property integer $sub_divisor
 * @property string $sub_symbol_left
 * @property string $sub_symbol_right
 * @property string $thousands_point
 * @property string $decimal_point
 * @property integer $decimal_digits
 * @property string $name
 * @property string $sub_name
 * 
 * @package    L8M
 * @subpackage Models (Default Module)
 * @author     Norbert Marks <nm@l8m.com>
 * @version    SVN: $Id: Builder.php 7 2014-03-11 16:18:40Z nm $
 */
abstract class Default_Model_Base_Currency extends Default_Model_Base_Abstract
{
    public function setTableDefinition()
    {
        $this->setTableName('currency');
        $this->hasColumn('id', 'integer', 11, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => '11',
             ));
        $this->hasColumn('iso_3', 'string', 3, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '3',
             ));
        $this->hasColumn('iso_nr', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('symbol_left', 'string', 12, array(
             'type' => 'string',
             'length' => '12',
             ));
        $this->hasColumn('symbol_right', 'string', 12, array(
             'type' => 'string',
             'length' => '12',
             ));
        $this->hasColumn('sub_divisor', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('sub_symbol_left', 'string', 12, array(
             'type' => 'string',
             'length' => '12',
             ));
        $this->hasColumn('sub_symbol_right', 'string', 12, array(
             'type' => 'string',
             'length' => '12',
             ));
        $this->hasColumn('thousands_point', 'string', 1, array(
             'type' => 'string',
             'length' => '1',
             ));
        $this->hasColumn('decimal_point', 'string', 1, array(
             'type' => 'string',
             'length' => '1',
             ));
        $this->hasColumn('decimal_digits', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('sub_name', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));


        $this->index('iso_3_idx', array(
             'fields' => 
             array(
              0 => 'iso_3',
             ),
             ));
        $this->index('iso_nr_idx', array(
             'fields' => 
             array(
              0 => 'iso_nr',
             ),
             ));
        $this->option('collate', 'utf8_bin');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $i18n0 = new Doctrine_Template_I18n(array(
             'tableName' => 'currency_translation',
             'fields' => 
             array(
              0 => 'name',
              1 => 'sub_name',
             ),
             ));
        $timestampable1 = new Doctrine_Template_Timestampable();
        $i18n0->addChild($timestampable1);
        $softdelete1 = new Doctrine_Template_SoftDelete();
        $i18n0->addChild($softdelete1);
        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($i18n0);
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}