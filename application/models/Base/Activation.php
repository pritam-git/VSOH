<?php

/**
 * Default_Model_Base_Activation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property boolean $disabled
 * @property string $activation_code
 * @property string $target
 * @property integer $target_id
 * @property clob $redirect_url
 * @property string $remote_ip
 * @property datetime $expires_at
 * @property datetime $used_at
 * 
 * @package    L8M
 * @subpackage Models (Default Module)
 * @author     Norbert Marks <nm@l8m.com>
 * @version    SVN: $Id: Builder.php 7 2014-03-11 16:18:40Z nm $
 */
abstract class Default_Model_Base_Activation extends Default_Model_Base_Abstract
{
    public function setTableDefinition()
    {
        $this->setTableName('activation');
        $this->hasColumn('id', 'integer', 11, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => '11',
             ));
        $this->hasColumn('disabled', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('activation_code', 'string', 32, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => '32',
             ));
        $this->hasColumn('target', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('target_id', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => '11',
             ));
        $this->hasColumn('redirect_url', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));
        $this->hasColumn('remote_ip', 'string', 15, array(
             'type' => 'string',
             'length' => '15',
             ));
        $this->hasColumn('expires_at', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('used_at', 'datetime', null, array(
             'type' => 'datetime',
             ));

        $this->option('collate', 'utf8_bin');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}