<?php

/**
 * Default_Model_Base_ModelColumnName
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $model_name_id
 * @property integer $model_column_name_edit_as_id
 * @property integer $position
 * @property string $display
 * @property Default_Model_ModelName $ModelName
 * @property Default_Model_ModelColumnNameEditAs $ModelColumnNameEditAs
 * @property Doctrine_Collection $ModelListColumn
 * @property Doctrine_Collection $ModelListEditIgnore
 * @property Doctrine_Collection $ModelListWhere
 * @property Doctrine_Collection $RememberMediaFolder
 * 
 * @package    L8M
 * @subpackage Models (Default Module)
 * @author     Norbert Marks <nm@l8m.com>
 * @version    SVN: $Id: Builder.php 7 2014-03-11 16:18:40Z nm $
 */
abstract class Default_Model_Base_ModelColumnName extends Default_Model_Base_Abstract
{
    public function setTableDefinition()
    {
        $this->setTableName('model_column_name');
        $this->hasColumn('id', 'integer', 11, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => '11',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('model_name_id', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => '11',
             ));
        $this->hasColumn('model_column_name_edit_as_id', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '11',
             ));
        $this->hasColumn('position', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '11',
             ));
        $this->hasColumn('display', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));


        $this->index('model_column_id', array(
             'fields' => 
             array(
              0 => 'model_name_id',
             ),
             ));
        $this->index('model_column_name_edit_as_id', array(
             'fields' => 
             array(
              0 => 'model_column_name_edit_as_id',
             ),
             ));
        $this->index('position_idx', array(
             'fields' => 
             array(
              0 => 'position',
             ),
             ));
        $this->option('collate', 'utf8_bin');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Default_Model_ModelName as ModelName', array(
             'local' => 'model_name_id',
             'foreign' => 'id'));

        $this->hasOne('Default_Model_ModelColumnNameEditAs as ModelColumnNameEditAs', array(
             'local' => 'model_column_name_edit_as_id',
             'foreign' => 'id'));

        $this->hasMany('Default_Model_ModelListColumn as ModelListColumn', array(
             'local' => 'id',
             'foreign' => 'model_column_name_id'));

        $this->hasMany('Default_Model_ModelListEditIgnore as ModelListEditIgnore', array(
             'local' => 'id',
             'foreign' => 'model_column_name_id'));

        $this->hasMany('Default_Model_ModelListWhere as ModelListWhere', array(
             'local' => 'id',
             'foreign' => 'model_column_name_id'));

        $this->hasMany('Default_Model_RememberMediaFolder as RememberMediaFolder', array(
             'local' => 'id',
             'foreign' => 'model_column_name_id'));

        $i18n0 = new Doctrine_Template_I18n(array(
             'tableName' => 'model_column_name_translation',
             'fields' => 
             array(
              0 => 'display',
             ),
             ));
        $timestampable1 = new Doctrine_Template_Timestampable();
        $i18n0->addChild($timestampable1);
        $softdelete1 = new Doctrine_Template_SoftDelete();
        $i18n0->addChild($softdelete1);
        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($i18n0);
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}